{"version":3,"sources":["index.js","SeasonDisplay.js","WeatherCard.js","WeatherBackground.js","Spinner.js","../src sync /^.*$","PNGImages/cloud1.png","PNGImages/cloud2.png","PNGImages/light.png","PNGImages/mist.png","PNGImages/moon.png","PNGImages/rain.png","PNGImages/stars.png","PNGImages/sun.png","ScreenShots/1.JPG","ScreenShots/clearSky.JPG","ScreenShots/nightCloud.JPG","ScreenShots/rain.JPG","ScreenShots/snow.JPG"],"names":["App","state","lat","errorMessage","forecastData","fetchWeatherData","lon","a","process","URL","axios","get","then","response","setState","data","catch","err","message","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","this","className","renderContent","React","Component","ReactDOM","render","document","querySelector","formatDate","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","SeasonDisplay","props","list","city","forecast","filter","dt_txt","includes","todaysFilteredData","style","overflow","desc","weather","cityName","name","todaysData","weatherDetails","WeatherCard","current","parseInt","dt","toDateString","main","temp","temp_min","humidity","temp_max","wind","speed","description","src","icon","alt","width","ForecastCardGrid","map","ForecastCard","key","date","feels_like","Background","weatherDesc","phase","hour","getHours","images","cloud1","imgSrc","cloud2","light","rain","mist","stars","weatherObject","Thunderstorm","Drizzle","Rain","Clouds","Mist","Fog","Clear","Snow","currentBackground","bg","imgAlt","n","Weather","index","Winter","background","require","element","i","push","Spinner","defaultProps","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.13fc3460.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n\r\n/*Css Import*/\r\nimport \"./SeasonDisplay.css\";\r\nimport \"./Snowflake.css\";\r\n\r\n/*Component Import*/\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: \"\", forecastData: null };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        this.fetchWeatherData(\r\n          position.coords.latitude,\r\n          position.coords.longitude\r\n        );\r\n      },\r\n      (err) => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  fetchWeatherData = async (lat, lon) => {\r\n    const apiKey =\r\n      process.env\r\n        .REACT_APP_WEATHER_API_KEY; /*Paste API key here, Sign up and get an API key https://openweathermap.org/appid */\r\n    const URL = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n    await axios\r\n      .get(URL)\r\n      .then((response) => {\r\n        this.setState({ forecastData: response.data });\r\n      })\r\n      .catch((err) => {\r\n        let message = err.response && err.response.data.message;\r\n        this.setState({ errorMessage: message });\r\n      });\r\n  };\r\n\r\n  renderContent() {\r\n    if (this.state.errorMessage && !this.state.forecastData) {\r\n      return <div className=\"error\">Error: {this.state.errorMessage}</div>;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.forecastData) {\r\n      return <SeasonDisplay forecastData={this.state.forecastData} />;\r\n    }\r\n\r\n    return <Spinner message=\"Please accept location request\" />;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","import React from \"react\";\r\nimport { WeatherCard, ForecastCardGrid } from \"./WeatherCard\";\r\nimport { Background } from \"./WeatherBackground\";\r\n\r\nconst formatDate = () => {\r\n  let d = new Date(),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\nconst SeasonDisplay = (props) => {\r\n  const { list, city } = { ...props.forecastData };\r\n  const forecast = list.filter((data) => {\r\n    if (!data.dt_txt.includes(formatDate()) && data.dt_txt.includes(\"12:00:00\"))\r\n      return data;\r\n    return null;\r\n  });\r\n  const todaysFilteredData = list.filter((data) => {\r\n    if (data.dt_txt.includes(formatDate())) return data;\r\n    return null;\r\n  });\r\n  return (\r\n    <div style={{ overflow: \"auto\" }}>\r\n      <Background\r\n        desc={\r\n          todaysFilteredData &&\r\n          todaysFilteredData[0] &&\r\n          todaysFilteredData[0].weather\r\n        }\r\n      />\r\n      <WeatherCard cityName={city.name} todaysData={todaysFilteredData} />\r\n      <ForecastCardGrid weatherDetails={forecast} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\nimport \"./SeasonDisplay\";\r\nexport const WeatherCard = (props) => {\r\n  const current = props.todaysData && props.todaysData[0];\r\n  return (\r\n    <div className=\"widget\">\r\n      <div className=\"panel\">\r\n        <div className=\"date\">{`Today, ${new Date(\r\n          parseInt(current.dt) * 1000\r\n        ).toDateString()}`}</div>\r\n        <div className=\"city\">{props.cityName}</div>\r\n        <div className=\"temp\">{current.main.temp}&deg;C</div>\r\n        <div className=\"other\">\r\n          Min:&nbsp;&nbsp;{current.main.temp_min}\r\n          &deg;C&nbsp;&nbsp;&nbsp;&nbsp;Humidity:&nbsp;&nbsp;\r\n          {current.main.humidity}%\r\n        </div>\r\n        <div className=\"other\">\r\n          Max:&nbsp;&nbsp;{current.main.temp_max}\r\n          &deg;C&nbsp;&nbsp;&nbsp;&nbsp;Wind:&nbsp;&nbsp;\r\n          {current.wind.speed} km/h\r\n        </div>\r\n      </div>\r\n      <div className=\"right-panel panel\">\r\n        <div className=\"icon-description\">{current.weather[0].description}</div>\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${current.weather[0].icon}@2x.png`}\r\n          alt={`${current.weather[0].description}`}\r\n          width=\"140px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ForecastCardGrid = (props) => {\r\n  const array = props.weatherDetails;\r\n  const list = array.map((data) => (\r\n    <ForecastCard\r\n      key={data.dt}\r\n      date={data.dt}\r\n      temp={data.main}\r\n      wind={data.wind.speed}\r\n      weather={data.weather[0].description}\r\n      icon={data.weather[0].icon}\r\n    />\r\n  ));\r\n  return <ul className=\"grid-container\">{list}</ul>;\r\n};\r\n\r\nconst ForecastCard = (props) => {\r\n  return (\r\n    <li className=\"grid-item\">\r\n      <div className=\"card night\">\r\n        <div className=\"date\">\r\n          {new Date(parseInt(props.date) * 1000).toDateString()}\r\n        </div>\r\n        <div className=\"icon-description\">{props.weather}</div>\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${props.icon}@2x.png`}\r\n          alt={`${props.weather}`}\r\n          width=\"140px\"\r\n        />\r\n        <div className=\"temp\">{props.temp.temp}&deg;C</div>\r\n        <div className=\"other\">\r\n          Feel like:&nbsp;{props.temp.feels_like}&deg;C\r\n        </div>\r\n        <div className=\"other\">\r\n          Min:&nbsp;{props.temp.temp_min}\r\n          &deg;C&nbsp;&nbsp;Humidity:&nbsp;\r\n          {props.temp.humidity}%\r\n        </div>\r\n        <div className=\"other\">\r\n          Max:&nbsp;{props.temp.temp_max}\r\n          &deg;C&nbsp;&nbsp;Wind:&nbsp;\r\n          {props.wind} km/h\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Background = (props) => {\r\n  let weatherDesc = props.desc[0] && props.desc[0].main;\r\n  const phase = () => {\r\n    let hour = new Date().getHours();\r\n    return hour > 5 && hour < 19 ? \"d\" : \"n\";\r\n  };\r\n  const images = {\r\n    cloud1: {\r\n      imgSrc: \"./PNGImages/cloud1.png\",\r\n      desc: \"cloud1\",\r\n    },\r\n    cloud2: {\r\n      imgSrc: \"./PNGImages/cloud2.png\",\r\n      desc: \"cloud2\",\r\n    },\r\n    light: {\r\n      imgSrc: \"./PNGImages/light.png\",\r\n      desc: \"light\",\r\n    },\r\n    rain: {\r\n      imgSrc: \"./PNGImages/rain.png\",\r\n      desc: \"rain\",\r\n    },\r\n    mist: {\r\n      imgSrc: \"./PNGImages/mist.png\",\r\n      desc: \"mist\",\r\n    },\r\n    stars: {\r\n      imgSrc: \"./PNGImages/stars.png\",\r\n      desc: \"stars\",\r\n    },\r\n  };\r\n  const weatherObject = {\r\n    Thunderstorm: [images.cloud1, images.cloud2, images.light, images.rain],\r\n    Drizzle: [images.cloud2, images.rain],\r\n    Rain: [images.cloud1, images.rain],\r\n    Clouds: [images.cloud1, images.cloud2, images.stars],\r\n    Mist: [images.stars, images.mist],\r\n    Fog: [images.stars, images.mist],\r\n    Clear: [images.stars],\r\n    Snow: [images.stars, images.cloud2, \"Winter\"],\r\n  };\r\n  const background = {\r\n    d: {\r\n      bg: \"daySky\",\r\n      imgSrc: \"./PNGImages/sun.png\",\r\n      imgAlt: \"Sun\",\r\n    },\r\n    n: {\r\n      bg: \"nightSky\",\r\n      imgSrc: \"./PNGImages/moon.png\",\r\n      imgAlt: \"Moon\",\r\n    },\r\n  };\r\n  let currentBackground = background[phase()];\r\n  let weather = weatherObject[weatherDesc];\r\n  return (\r\n    <div className={`${currentBackground.bg} ${weatherDesc + phase()}`}>\r\n      {weather &&\r\n        weather.map((Weather, index) => {\r\n          if (phase() === \"d\" && Weather.desc === \"stars\") return null;\r\n          else if (Weather === \"Winter\") {\r\n            return <Winter key={`background${index}`} />;\r\n          } else\r\n            return (\r\n              <div\r\n                key={`background${index}`}\r\n                className={\"background\"}\r\n                style={{\r\n                  background: `url(${require(`${Weather.imgSrc}`)}) repeat top center`,\r\n                }}\r\n              />\r\n            );\r\n        })}\r\n      <img\r\n        className={\"foreground\"}\r\n        src={require(`${currentBackground.imgSrc}`)}\r\n        alt={currentBackground.imgAlt}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport const Winter = () => {\r\n  let element = [];\r\n  for (let i = 0; i < 83; i++) element.push(<i key={`WinterSnow${i}`}></i>);\r\n  return <div className={`snowflakes`}>{element}</div>;\r\n};\r\n","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;\r\n","var map = {\n\t\".\": 2,\n\t\"./\": 2,\n\t\"./PNGImages/cloud1.png\": 51,\n\t\"./PNGImages/cloud2.png\": 52,\n\t\"./PNGImages/light.png\": 53,\n\t\"./PNGImages/mist.png\": 54,\n\t\"./PNGImages/moon.png\": 55,\n\t\"./PNGImages/rain.png\": 56,\n\t\"./PNGImages/stars.png\": 57,\n\t\"./PNGImages/sun.png\": 58,\n\t\"./ScreenShots/1.JPG\": 59,\n\t\"./ScreenShots/clearSky.JPG\": 60,\n\t\"./ScreenShots/nightCloud.JPG\": 61,\n\t\"./ScreenShots/rain.JPG\": 62,\n\t\"./ScreenShots/snow.JPG\": 63,\n\t\"./SeasonDisplay\": 3,\n\t\"./SeasonDisplay.css\": 17,\n\t\"./SeasonDisplay.js\": 3,\n\t\"./Snowflake.css\": 18,\n\t\"./Spinner\": 6,\n\t\"./Spinner.js\": 6,\n\t\"./WeatherBackground\": 5,\n\t\"./WeatherBackground.js\": 5,\n\t\"./WeatherCard\": 4,\n\t\"./WeatherCard.js\": 4,\n\t\"./index\": 2,\n\t\"./index.js\": 2\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/cloud1.73007ce8.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud2.9bc856b8.png\";","module.exports = __webpack_public_path__ + \"static/media/light.f6f7e6ef.png\";","module.exports = __webpack_public_path__ + \"static/media/mist.d4056aa2.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.d86bda4e.png\";","module.exports = __webpack_public_path__ + \"static/media/rain.b94efa1d.png\";","module.exports = __webpack_public_path__ + \"static/media/stars.6494ab5b.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.80c5520e.png\";","module.exports = __webpack_public_path__ + \"static/media/1.58ede5d0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/clearSky.f9b2dd38.JPG\";","module.exports = __webpack_public_path__ + \"static/media/nightCloud.b7c6226c.JPG\";","module.exports = __webpack_public_path__ + \"static/media/rain.eefa3aa5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/snow.04c1bfc4.JPG\";"],"sourceRoot":""}